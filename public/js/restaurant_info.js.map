{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","mapLoaded","document","addEventListener","fetchRestaurantFromURL","error","console","fillBreadcrumb","lazyLoadImages","loadStaticMap","window","initMap","self","google","maps","Map","getElementById","zoom","center","latlng","scrollwheel","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","fetchReviewsForRestaurant","reviews","fillReviewsHTML","fetchReviewsByRestaurantId","innerHTML","name","address","image","className","setAttribute","imageUrlForRestaurant","alt","cuisine_type","favoriteToggle","is_favorite","classList","add","tabIndex","event","favoriteRestaurant","target","operating_hours","fillRestaurantHoursHTML","operatingHours","hours","key","row","createElement","day","appendChild","time","container","noReviews","ul","forEach","review","createReviewHTML","li","rating","i","star","date","Date","createdAt","toDateString","comments","breadcrumb","url","location","href","replace","results","RegExp","exec","decodeURIComponent","lozad","observe","mapElement","clientHeight","clientWidth","scale","Math","floor","style","backgroundImage","lat","lng","loadRealMap","script","type","src","body","showAddReviewDialog","showModal","HTMLDialogElement","onload","dialog","querySelector","dialogPolyfill","registerDialog","link","rel","head","submitReview","restaurant_id","value","parseInt","getTime","addReview","reset","close","cancelAddReview","indexOf","remove"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant, map;\nlet mapLoaded = false;\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      fillBreadcrumb();\n      lazyLoadImages();\n      loadStaticMap(restaurant);\n    }\n  });\n});\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initMap = () => {\n  mapLoaded = true;\n  self.map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 16,\n    center: self.restaurant.latlng,\n    scrollwheel: false\n  });\n  DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n};\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    callback('No restaurant id in URL', null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n};\n\nfetchReviewsForRestaurant = () => {\n  if (self.restaurant.reviews)\n    fillReviewsHTML(self.restaurant.reviews);\n  else {\n    DBHelper.fetchReviewsByRestaurantId(self.restaurant.id, (error, reviews) => {\n      self.restaurant.reviews = reviews;\n      fillReviewsHTML(self.restaurant.reviews);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  const image = document.getElementById('restaurant-img');\n  image.className = 'lozad';\n  image.setAttribute('data-src', DBHelper.imageUrlForRestaurant(restaurant));\n  image.alt = `photo of ${restaurant.name} restaurant`;\n\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  const favoriteToggle = document.getElementById('restaurant-favorite');\n  if (restaurant.is_favorite) favoriteToggle.classList.add('is-favorite');\n  favoriteToggle.tabIndex = '0';\n  favoriteToggle.setAttribute('aria-label', `Favorite restaurant ${restaurant.name}`);\n  favoriteToggle.addEventListener('click', event => favoriteRestaurant(event.target, restaurant));\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fetchReviewsForRestaurant();\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n    row.tabIndex = 0;\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = (review) => {\n  const li = document.createElement('li');\n  li.tabIndex = 0;\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  name.className = 'review-name';\n  li.appendChild(name);\n\n  const rating = document.createElement('span');\n  rating.setAttribute('aria-label', `Rating: ${review.rating}`);\n  for (let i = 0; i < 5; i++) {\n    const star = document.createElement('span');\n    star.innerHTML = '★';\n    if (i < review.rating)\n      star.className = 'reviews-rating';\n    rating.appendChild(star)\n  }\n  li.appendChild(rating);\n\n  const date = document.createElement('span');\n  date.innerHTML = new Date(review.createdAt).toDateString();\n  li.appendChild(date);\n\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n\n/**\n * Lazy load images\n */\nlazyLoadImages = () => {\n  const observer = lozad();\n  observer.observe();\n};\n\nloadStaticMap = (restaurant) => {\n  const mapElement = document.getElementById('map');\n  let clientHeight = mapElement.clientHeight;\n  let clientWidth = mapElement.clientWidth;\n  let scale = 1;\n  if (clientHeight > 640 || clientWidth > 640) {\n    clientHeight = Math.floor(clientHeight / 2);\n    clientWidth = Math.floor(clientWidth / 2);\n    scale = 2;\n  }\n  mapElement.style.backgroundImage = `url(https://maps.googleapis.com/maps/api/staticmap?size=${clientWidth}x${clientHeight}&markers=size:mid|${restaurant.latlng.lat},${restaurant.latlng.lng}&key=AIzaSyDKsWF94cMGUciBs96YIpbCmexfRKT75x4&scale=${scale})`\n};\n\nloadRealMap = () => {\n  if (mapLoaded) return;\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyDKsWF94cMGUciBs96YIpbCmexfRKT75x4&libraries=places&callback=initMap';\n  document.body.appendChild(script);\n};\n\nshowAddReviewDialog = () => {\n  document.getElementById('addReviewDialog').showModal()\n};\n\nif (!window.HTMLDialogElement) {\n  const script = document.createElement('script');\n  script.src = 'dialog-polyfill.js';\n  script.type = 'text/javascript';\n  script.onload = function () {\n    const dialog = document.querySelector('dialog');\n    dialogPolyfill.registerDialog(dialog);\n  };\n  document.body.appendChild(script);\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.type = 'text/css';\n  link.href = 'dialog-polyfill.css';\n  document.head.appendChild(link);\n}\n\nsubmitReview = () => {\n  const review = {\n    restaurant_id: self.restaurant.id,\n    name: document.getElementById('name').value,\n    rating: parseInt(document.querySelector('input[name=\"rating\"]:checked').value),\n    comments: document.getElementById('comments').value,\n    createdAt: new Date().getTime()\n  };\n\n  DBHelper.addReview(review);\n\n  document.querySelector('form').reset();\n  document.getElementById('reviews-list').appendChild(createReviewHTML(review));\n  document.querySelector('dialog').close();\n};\n\ncancelAddReview = () => {\n  document.querySelector('form').reset();\n  document.querySelector('dialog').close();\n};\n\nfavoriteRestaurant = (target, restaurant) => {\n  if (target.className.indexOf('is-favorite') > -1) {\n    target.classList.remove('is-favorite');\n    DBHelper.favoriteRestaurant(restaurant, false);\n  } else {\n    target.classList.add('is-favorite');\n    DBHelper.favoriteRestaurant(restaurant, true);\n  }\n};"]}